<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		
	</head>
	
	<body>
		<table>
			<tr>
				<td><p>這是一個模擬Hash Table的程式</p></td>
			</tr>
			<tr>
				<td><p>你需先按下，模擬模式，或是測驗模式</p></td>
			</tr>
			<tr>
				<td><p>接著，你需再按下建Hash Table時Collision要用linear probe或是double hash</p></td>
			</tr>
			<tr>
				<td><p>1.在模擬模式下，你可以自行輸入要放入Hash Table的資料，或是按下隨機產生</p></td>
			</tr>
			<tr>
				<td><p>然後可以按下一步(一次做一步)，一次做完，全部清除(需再從上面重新設定)</p></td>
			</tr>
			<tr>
				<td><p>2.在測驗模式下，請設定完上面之後，按下開始出題，根據隨機產生的資料</p></td>
			</tr>
			<tr>
				<td><p>按照建Hash Table的方式，將答案填入格子中，之後按下確認答案。錯的格子將會以黃色背景顯示。</p></td>
			</tr>
		</table>
		<hr>
		<hr>
		<form name = "hashForm" id="hashForm" >
			<table>
			<tr>
				<td><p>1.設定模式:</p></td>  <td><input type="radio" name="modeChoice1" value="模擬模式">模擬模式</td>  <td><input type="radio" name="modeChoice1" value="測驗模式">測驗模式   </td><td><input type = "button"  value = "確認" onClick = "modeChoice();"></td>
				<td><input type = "button"  value = "清除" onClick = "modeClear();"></td><td><p id="mode"></p></td>
			</tr>
			<tr>
				<td><p>2.設定:Collision解決方式</p></td>  <td><input type="radio" name="collision1" value="linear probe">linear probe</td>  <td><input type="radio" name="collision1" value="double hash">double hash   </td><td><input type = "button"  value = "確認" onClick = "collisionChoice();"></td>
				<td><input type = "button"  value = "清除" onClick = "collisionClear();"></td><td><p id="collision"></p></td>
			</tr>
			</table>
			<table>
				<tr>
					<td>請輸入資料：</td> <td><input type=text value="" id=dataText size="30"></td>
					<td><input type = "button"  value = "確定" onClick = "fillData()"></td>
					<td><input type = "button"  value = "隨機產生" onClick = "fillData1()"></td>
					<td><input type = "button"  value = "清除資料" onClick = "deleteData()"></td>
				</tr>
			</table>
			<table>
				<tr>	
					<td><p id="data"></p></td>
				</tr>
			</table>
		</form>
		
		<script>
			var mode = -1;
			var collision = -1;
			var data = new Array(-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1);
			var spitData = new Array();
			var fillLocation = 0;

			function modeChoice(){
				var form = document.getElementById("hashForm");
				var result = document.getElementById("mode");
			
				for (var i = 0; i < form.modeChoice1.length; i++) {
					if ( form.modeChoice1[i].checked ) {
						result.innerHTML = "you selected " + form.modeChoice1[i].value;
						mode = i;
						break;
					}
				}
			}
			
			function collisionChoice(){
				var form = document.getElementById("hashForm");
				var result = document.getElementById("collision");
			
				for (var i = 0; i < form.collision1.length; i++) {
					if ( form.collision1[i].checked ) {
						collision = i;
						result.innerHTML = "you selected " + form.collision1[i].value;
						break;
					}
				}
			}
			
			function modeClear(){
				var form = document.getElementById("hashForm");
				var result = document.getElementById("mode");
				for (var i = 0; i < form.modeChoice1.length; i++) {
					form.modeChoice1[i].checked = false;
				}
				result.innerHTML = "";
				mode = -1;
			}
			
			function collisionClear(){
				var form = document.getElementById("hashForm");
				var result = document.getElementById("collision");
				for (var i = 0; i < form.collision1.length; i++) {
					form.collision1[i].checked = false;
				}
				result.innerHTML = "";
				collision = -1;
			}
			
			function fillData1(){
				var result = document.getElementById("data");
				var dataString = "";
				if(mode != -1 && collision != -1){
					var amount = 12;
					var count = 0;
					while(fillLocation <= amount){
						var n1 = Math.floor(Math.random()*1000);
						data[fillLocation] = n1;
						fillLocation = fillLocation + 1;
					}
					var display = 0;
					var dataString1 = "";
					while(display < data.length){
						if(data[display] != -1){
							dataString1 = dataString1 + data[display] + ",";
							display = display + 1;
						}else{
							break;
						}						
					}
					result.innerHTML =  "資料為" + dataString1;	
					document.getElementById("dataText").value = "";	
					fillLocation = 13;
				}else{
					result.innerHTML = "你沒有選擇模式或是Collision解決方式";
				}
			}
			
			function fillData(){
				var dataString = document.getElementById("dataText").value;
				var result = document.getElementById("data");
				spitData = dataString.split(",");
				var amount = spitData.length;
				var innerLocation = 0;
				if(mode != -1 && collision != -1){
					if(fillLocation < 13){
						while(amount > 0){
							data[fillLocation] = spitData[innerLocation];
							innerLocation = innerLocation + 1;
							fillLocation = fillLocation + 1;
							amount = amount - 1;
							if(fillLocation >= 13){
								break;
							}
						}
						var display = 0;
						var dataString1 = "";
						while(display < data.length){
							if(data[display] != -1){
								dataString1 = dataString1 + data[display] + ",";
								display = display + 1;
							}else{
								break;
							}						
						}
						result.innerHTML =  "資料為" + dataString1;	
						document.getElementById("dataText").value = "";
					}else{
						var display = 0;
						var dataString1 = "";
						while(display < data.length){
							if(data[display] != -1){
								dataString1 = dataString1 + data[display] + ",";
								display = display + 1;
							}else{
								break;
							}						
						}
						result.innerHTML =  "資料為" + dataString1 + "資料超過容納的量，不可再加入";	
						document.getElementById("dataText").value = "";
					}
				}else{
					result.innerHTML = "你沒有選擇模式或是Collision解決方式";
				}
			}
			
			function deleteData(){
				var result = document.getElementById("data");
				document.getElementById("dataText").value = "";
				var amount = 12;
				var count = 0;
				while(count <= amount){
					data[count] = -1;
					count = count + 1;
				}
				result.innerHTML = "";
				fillLocation = 0;
			}
			
		</script>

	</body>
	
</html>
